{"ast":null,"code":"var _jsxFileName = \"/Users/tanyakarpenko/Documents/Homework/React Homework/goit-react-hw-02-feedback/src/Components/App.js\";\nimport React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './Feedbackoptions';\nimport Notification from './Notification';\nimport Section from './Section';\nimport Container from './Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onLeaveFeedback = feedback => {\n      this.setState(prevState => ({\n        [feedback]: prevState[feedback] + 1\n      }));\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const countTotalFeedback = good + bad + neutral;\n    const countPositiveFeedbackPercentage = Math.round(good / countTotalFeedback * 100);\n    const options = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: options,\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: countTotalFeedback ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: countTotalFeedback,\n          positivePercentage: countPositiveFeedbackPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"No feedback given\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tanyakarpenko/Documents/Homework/React Homework/goit-react-hw-02-feedback/src/Components/App.js"],"names":["React","Component","Statistics","FeedbackOptions","Notification","Section","Container","App","state","good","neutral","bad","onLeaveFeedback","feedback","setState","prevState","render","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","options","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAM1BC,eAN0B,GAMRC,QAAQ,IAAI;AAC5B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACF,QAAD,GAAYE,SAAS,CAACF,QAAD,CAAT,GAAsB;AADR,OAAL,CAAvB;AAGD,KAVyB;AAAA;;AAY1BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AAEA,UAAMS,kBAAkB,GAAGR,IAAI,GAAGE,GAAP,GAAaD,OAAxC;AACA,UAAMQ,+BAA+B,GAAGC,IAAI,CAACC,KAAL,CACrCX,IAAI,GAAGQ,kBAAR,GAA8B,GADQ,CAAxC;AAGA,UAAMI,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAjB,CAAhB;AAEA,wBACE,QAAC,SAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAEa,OADX;AAEE,UAAA,eAAe,EAAE,KAAKT;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBACGK,kBAAkB,gBACjB,QAAC,UAAD;AACE,UAAA,IAAI,EAAER,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAEM,kBAJT;AAKE,UAAA,kBAAkB,EAAEC;AALtB;AAAA;AAAA;AAAA;AAAA,gBADiB,gBASjB,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA5CyB;;AA+C5B,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './Feedbackoptions';\nimport Notification from './Notification';\nimport Section from './Section';\nimport Container from './Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = feedback => {\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const countTotalFeedback = good + bad + neutral;\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100,\n    );\n    const options = Object.keys(this.state);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}